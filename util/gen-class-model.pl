#!/usr/bin/perl
use strict;

# See Makefile for details of how this is executed

my %class_by_var = ();
my %parenth = ();
my %sloth = ();
my %slothd = ();
my @clss = ();

my $cls;
my $var;
my $super;
while(<>) {
    s@\s+@ @g;
    if (m@(\w+) = api.model\('(\w+)', \{@) {
        ($var, $cls) = ($1,$2);
        $class_by_var{$var} = $cls;
        push(@clss, $cls);
    }
    elsif (m@(\w+) = api.inherit\('(\w+)', (\w+), \{@) {
        ($var, $cls, $super) = ($1,$2,$3);
        $class_by_var{$var} = $cls;
        $parenth{$cls} = $class_by_var{$super};
        push(@clss, $cls);
    }
    else {
        if (m@ '(\w+)': (.*)@) {
            my ($s, $rest) = ($1,$2);
            if ($s ne 'id') {
                push(@{$sloth{$cls}}, $s);
                if ($rest =~ m@description='(.*)'@) {
                    $slothd{$cls}{$s} = $1;
                }
            }
        }

    }
}

print '""" Class model autogenerated from flask model """';
print "\n\n";
    
    

foreach my $cls (@clss) {
    my $p = $parenth{$cls};
    print "class $cls($p):\n";
    print '    """'."\n";
    print "    $cls\n\n";
    print "    Superclass: $p\n\n" if $p;
    print "    Arguments\n";
    print "    ---------\n";
    foreach (@{$sloth{$cls} || []}) {
        print "     $_ : \n\n";
        my $desc = $slothd{$cls}{$_};
        print "         $desc\n\n" if $desc;
    }
    print '    """'."\n";
    print "    def __init__(self,\n";
    print "                 id=None,\n";
    print "                 $_=None,\n" foreach @{$sloth{$cls} || []};
    print "                 \*\*kwargs):\n";
    if ($p) {
        print "        super($cls, self).__init__(id, \*\*kwargs)\n";
    }
    else {
        print "        self.id=id\n";
    }
    print "        self.$_=$_\n" foreach @{$sloth{$cls} || []};
    print "\n\n";
}
